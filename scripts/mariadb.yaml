# Source: mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mariadb
  labels:
    app: "mariadb"
    chart: "mariadb-7.4.2"
    release: "mariadb"
    heritage: "Helm"
type: Opaque
data:
  mariadb-root-password: "bWljcm8K"

  mariadb-replication-password: "b0RURXpsR1hiZA=="
---
# Source: mariadb/templates/master-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-master
  labels:
    app: "mariadb"
    component: "master"
    chart: "mariadb-7.4.2"
    release: "mariadb"
    heritage: "Helm"
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: mariadb/templates/tests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-tests
data:
  run.sh: |-
    @test "Testing MariaDB is accessible" {
      mysql -h mariadb -uroot -p$MARIADB_ROOT_PASSWORD -e 'show databases;'
    }
---
# Source: mariadb/templates/master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mariadb
  labels:
    app: "mariadb"
    component: "master"
    chart: "mariadb-7.4.2"
    release: "mariadb"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector:
    app: "mariadb"
    component: "master"
    release: "mariadb"
---
# Source: mariadb/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb-master
  labels:
    app: mariadb
    chart: mariadb-7.4.2
    release: mariadb
    heritage: Helm
    component: master
spec:
  selector:
    matchLabels:
      app: mariadb
      release: mariadb
      component: master
  serviceName: mariadb-master
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mariadb
        chart: mariadb-7.4.2
        release: mariadb
        component: master
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: mariadb
                    release: mariadb
      initContainers:
      containers:
        - name: "mariadb"
          image: docker.io/bitnami/mariadb:10.3.23-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-root-password
            - name: MARIADB_DATABASE
              value: "micro"
            - name: MARIADB_REPLICATION_MODE
              value: "master"
            - name: MARIADB_REPLICATION_USER
              value: "replicator"
            - name: MARIADB_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb
                  key: mariadb-replication-password
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MARIADB_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: mariadb-master
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "mariadb"
          component: "master"
          release: "mariadb"
          heritage: "Helm"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "2Gi"
---
# Source: mariadb/templates/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mariadb-test-u4r1b"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: docker.io/dduportal/bats:0.4.0
      command:
        - "bash"
        - "-c"
        - |
          set -ex
          # copy bats to tools dir
          cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
        - mountPath: /tools
          name: tools
  containers:
    - name: mariadb-test
      image: docker.io/bitnami/mariadb:10.3.23-debian-10-r0
      imagePullPolicy: "IfNotPresent"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb
              key: mariadb-root-password
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
    - name: tests
      configMap:
        name: mariadb-tests
    - name: tools
      emptyDir: {}
  restartPolicy: Never
